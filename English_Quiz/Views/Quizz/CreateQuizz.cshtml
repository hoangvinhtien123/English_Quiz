@model English_Quiz.Models.Quiz

@{
    ViewBag.Title = "Thêm mới đề";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Thêm mới</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2">  Mã đề</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.QUIZ_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QUIZ_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">  Tên đề</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.QUIZ_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QUIZ_NAME, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2"> Thời gian (phút)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TIME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TIME, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2"> Mô tả</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Cấp độ</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.QUIZ_TYPE_ID, (SelectList)ViewBag.listType, "--Chọn--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.QUIZ_TYPE_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-10" id="jsGrid"></div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Thêm mới" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Trở lại", "Quizz")
</div>
@section scripts{
    <script type="text/javascript">
        var data = [];

        const loadDataQuestionType = (id) => {
            $.post("/Quizz/getQuestionTypeByQuizId", {
                id: id
            }, function (e) {
                if (e) {
                    data = e;
                }
                $("#jsGrid").jsGrid({
                    width: "100%",
                    height: "400px",
                    autoload: true,
                    controller: {
                        insertItem: function (filter) {
                            insertGrid(filter)
                        },
                        updateItem: function (filter) {
                            updateGrid(filter)
                        },
                        deleteItem: function (filter) {
                            deleteGrid(filter)
                        }
                    },
                    onItemInserting: function (args) {
                        checkBeforeInsert(args);
                    },
                    deleteConfirm: "Bạn có chắc chắn muốn xóa không?",
                    invalidMessage: "Lỗi",
                    noDataContent: "Không có dữ liệu",
                    data: data.Questions,
                    inserting: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    fields: [
                        {
                            name: "TYPE_ID",title: "Nhóm câu hỏi", type: "select", width: 150, items: data.QuestionTypes, valueField: "TYPE_ID", textField: "TYPE_NAME", validate: {
                                validator: "required",
                                message: function (value, item) {
                                    return "Cần chọn loại câu hỏi";
                                },
                            }
                        },
                         { name: "PR_KEY", visible: false},
                        { name: "LIST_ORDER", title: "Sắp xếp", type: "number", width: 25 },
                        { name: "TOTAL_QUESTION", type: "number", width: 20, title: "Số lượng câu hỏi" },
                        { type: "control" }
                    ]
                });
            }, "json")

        }
        function checkBeforeInsert(args) {
            let quiz_id = $("#QUIZ_ID").val();
            if (quiz_id == "" || quiz_id == null || quiz_id == undefined) {
                args.cancel = true;
                alert("Cần nhập mã đề");
            }
        }
        function insertGrid(filter) {
            let quiz_id = $("#QUIZ_ID").val();
            return $.post("/Quizz/AddTypeQuestion", {
                type: filter.TYPE_ID,
                list_order: filter.LIST_ORDER,
                total_question: filter.TOTAL_QUESTION,
                quiz_id : quiz_id
            }, function (e) {
                loadDataQuestionType(quiz_id)
            },"json")
        }
        
        function updateGrid(filter) {
            let quiz_id = $("#QUIZ_ID").val();
            return $.post("/Quizz/UpdateTypeQuestion", {
                pr_key : filter.PR_KEY,
                type: filter.TYPE_ID,
                list_order: filter.LIST_ORDER,
                total_question: filter.TOTAL_QUESTION,
                quiz_id : quiz_id
            }, function (e) {

            }, "json")
        }
        function deleteGrid(filter) {
            let quiz_id = $("#QUIZ_ID").val();
            return $.post("/Quizz/DeleteTypeQuestion", {
                type: filter.TYPE_ID,
                quiz_id : quiz_id
            }, function (e) {

            }, "json")
        }

        $(document).ready(function () {
            loadDataQuestionType('0');
        })
    </script>
}

