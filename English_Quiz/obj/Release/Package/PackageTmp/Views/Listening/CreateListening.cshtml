@model English_Quiz.Models.Listening

@{
    ViewBag.Title = "Thêm mới bài nghe";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Thêm mới bài nghe</h2>

@using (Html.BeginForm("CreateListening", "Listening", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bài nghe</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.errorMsg != null)
        {
            <div class="well well-sm well-danger"> @ViewBag.errorMsg </div>
        }
        <div class="form-group">
            <label class="control-label col-md-2">  Mã bài nghe</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LISTENING_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LISTENING_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">  Tên bài nghe ( tiếng việt)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LISTENING_NAME_VN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LISTENING_NAME_VN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">  Tên bài nghe ( tiếng anh)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LISTENING_NAME_EN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LISTENING_NAME_EN, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-2">Bài test</label>
                @Html.CheckBoxFor(model => model.IS_TEST, new { htmlAttributes = new { @class = "form-control" }, id = "cbIsTest" })
                @Html.ValidationMessageFor(model => model.IS_TEST, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">  Loại bài nghe</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LISTENING_TYPE_ID, (SelectList)ViewBag.listType, "--Chọn--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LISTENING_TYPE_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">File nghe</label>
            <div class="col-md-10">
                <audio controls preload="auto" id="audio">
                    <source id="sourceAudio" />
                </audio>
                <input type='file' id="fUpload" name="fUpload" />
                @Html.ValidationMessageFor(model => model.LISTENING_FILE_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở lại", "Index")
</div>
@section scripts{
    <script type="text/javascript">

        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.readAsDataURL(input.files[0]); // convert to base64 string
                var files = event.target.files;
                $("#sourceAudio").attr("src", URL.createObjectURL(files[0]));
                document.getElementById("audio").load();
            }
        };

        $("#fUpload").change(function () {
            readURL(this);
        });

    </script>
}